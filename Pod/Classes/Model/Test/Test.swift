import Foundation

/// Can't bring this into the protocol for now due to limitations in how Swift handles the
/// `typealias` keyword.
///
/// - Parameters:
///     - test: a reference to the test that failed, for convenience.
///     - success: whether the test was a success or failure.  More information about the error
///         can be obtained by calling `lastError()`.
///
typealias TestResult = (test: Test, success: Bool) -> ()

/// Defined a single test object.
///
protocol Test : AnyObject {
    
    // MARK: - Test information
    
    /// The name of the test.
    ///
    func name() -> String;
    
    /// This method must return a description of what the test does.
    ///
    func description() -> String;
    
    // MARK: - Running & resetting
    
    /// This will be called when the test needs to be executed.
    ///
    func run(result: TestResult);
    
    /// Resets this object's state.  Should be called before running the test again.
    ///
    func reset()
    
    // MARK: - Test results
    
    /// The last error generated by running this test, or `nil` if there was no error.
    ///
    func lastError() -> TestError?
}